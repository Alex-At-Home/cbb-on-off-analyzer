// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LuckAdjDiagView LuckAdjDiagView - should create snapshot (baseline, override) 1`] = `
<span>
  <span>
    <b>
      Luck Adjustment diagnostics [
      Test2
      ]
    </b>
    <span>
       
      <a
        href="https://hoop-explorer.blogspot.com/2020/07/luck-adjustment-details.html"
        target="_blank"
      >
        (?)
      </a>
    </span>
    <span>
       off=[
      <b>
        -0.0
      </b>
      ], def=[
      <b>
        -3.3
      </b>
      ], margin=[
      <b>
        3.2
      </b>
      ] pts/100
    </span>
     (
    <a
      href="#"
      onClick={[Function]}
    >
      show 
      less
    </a>
    )
  </span>
  <ul>
    <li>
      <b>
        Offense
      </b>
      :
      <span>
         adjustment [
        <b>
          -0.0
        </b>
        ] pts/100
      </span>
    </li>
    <ul>
      <li>
        <b>
          3P Shooting
        </b>
        : 3P% [
        <b>
          -0.0
        </b>
        %], eFG [
        <b>
          -0.0
        </b>
        %]
        <span>
          , adjustment [
          <b>
            -0.0
          </b>
          ] pts/100
        </span>
         (
        <a
          href="#"
          onClick={[Function]}
        >
          show 
          less
        </a>
        )
      </li>
      <ul>
        <li>
          Delta_eFG: [
          <b>
            -0.0
          </b>
          %] = 1.5 * (Adj_3P_Off [
          <b>
            31.9
          </b>
          %] - Sample_3P_Off [
          <b>
            32.0
          </b>
          %]) * Sample_Off_3PR [
          <b>
            42.8
          </b>
          %]
        </li>
        <ul>
          <li>
            <i>
              (The idea is we'll calculate the expected shooting performance of the players in the lineup set, weighted by their usage, and then regress the actual 3P shooting agains that.)
            </i>
          </li>
          <li>
            Adj_3P_Off: [
            <b>
              31.9
            </b>
            %] = 
            <i>
              Weighted_Mean
            </i>
            ( Expected_3P% [
            <b>
              31.9
            </b>
            %], Base_3PA [
            <b>
              765
            </b>
            ], Sample_3P% [
            <b>
              32.0
            </b>
            %], Sample_3PA [
            <b>
              582
            </b>
            ] )
          </li>
          <li>
            Expected_3P%: [
            <b>
              31.9
            </b>
            %] = Calculated from 
            <i>
              Weighted_Mean
            </i>
             of: (early / assisted / solo / unknown)
          </li>
          <ul>
            <li
              key="0"
            >
              [
              <b>
                Cowan, Anthony
              </b>
              ]: Sample_3PA=[
              <b>
                144: 15 / 29 / 16 / 84
              </b>
              ] Base_3P%=[
              <b>
                32.2%: 32.2 / 34.2 / 28.2 / 32.2
              </b>
              ]
            </li>
            <li
              key="1"
            >
              [
              <b>
                Wiggins, Aaron
              </b>
              ]: Sample_3PA=[
              <b>
                133: 28 / 35 / 3 / 67
              </b>
              ] Base_3P%=[
              <b>
                31.7%: 31.7 / 32.1 / 26.1 / 31.7
              </b>
              ]
            </li>
          </ul>
        </ul>
        <span>
          <li>
            Adj_Delta_Pts/100: [
            <b>
              -0.0
            </b>
            ] = Delta_Pts/100 [
            <b>
              -0.0
            </b>
            ] * D1_Avg_Eff [
            <b>
              100.0
            </b>
            ] / Sample_Def_SOS [
            <b>
              96.3
            </b>
            ]
          </li>
          <li>
            Delta_Pts/100: [
            <b>
              -0.0
            </b>
            ] = Delta_Pts_No_ORBs/100 [
            <b>
              -0.0
            </b>
            ] + Pts_Off_Delta_Misses/100 [
            <b>
              0.0
            </b>
            ]
          </li>
          <ul>
            <li>
              <i>
                (Because of the change in 3P%, there are either more or less misses that can be rebounded by the offense.)
              </i>
            </li>
            <li>
              Delta_Pts_No_ORBs/100: [
              <b>
                -0.0
              </b>
              ] = 2 * Delta_eFG [
              <b>
                -0.0
              </b>
              %] * Sample_Off_FGA [
              <b>
                1360
              </b>
              ] / Sample_Possessions [
              <b>
                1602
              </b>
              ]
            </li>
            <li>
              Pts_Off_Delta_Misses/100: [
              <b>
                0.0
              </b>
              ] = ORB_Factor [
              <b>
                0.0
              </b>
              %] * (Sample_Def_Pts/100 [
              <b>
                108.4
              </b>
              ] + Delta_Pts_No_ORBs/100: [
              <b>
                -0.0
              </b>
              ])
            </li>
            <ul>
              <li>
                ORB_Factor: [
                <b>
                  0.0
                </b>
                %] = Delta_Misses% [
                <b>
                  0.0
                </b>
                %] * Sample_Def_ORB [
                <b>
                  30.9
                </b>
                %] / (1 - Delta_Misses/100 [
                <b>
                  0.0
                </b>
                %] * Sample_Def_ORB [
                <b>
                  30.9
                </b>
                %])
              </li>
            </ul>
          </ul>
        </span>
      </ul>
    </ul>
    <li>
      <b>
        Defense
      </b>
      :
      <span>
         adjustment [
        <b>
          -3.3
        </b>
        ] pts/100
      </span>
    </li>
    <ul>
      <li>
        <b>
          3P Shooting
        </b>
        : 3P% [
        <b>
          -3.8
        </b>
        %]
        <span>
          , eFG [
          <b>
            -2.2
          </b>
          %], adjustment [
          <b>
            -3.3
          </b>
          ] pts/100
        </span>
         (
        <a
          href="#"
          onClick={[Function]}
        >
          show 
          less
        </a>
        )
      </li>
      <ul>
        <li>
          Delta_eFG: [
          <b>
            -2.2
          </b>
          %] = 1.5 * (Adj_3P_Def [
          <b>
            32.4
          </b>
          %] - Sample_3P_Def [
          <b>
            36.1
          </b>
          %]) * Sample_Def_3PR [
          <b>
            38.5
          </b>
          %]
        </li>
        <ul>
          <li>
            <i>
              (The idea is we calculate a "3P defense" number from the sample, regressed to the [
              <b>
                baseline
              </b>
              ], assuming that [
              <b>
                66.0
              </b>
              %] of it is just luck. Then we calculate a "luck adjusted" 3P% by combining "3P defense" and the weighted average opponent 3P%.)
            </i>
          </li>
          <li>
            Adj_3P_Def: [
            <b>
              32.4
            </b>
            %] = Sample_3P_SoS [
            <b>
              32.3
            </b>
            %] + Delta_3PD [
            <b>
              0.1
            </b>
            %]
          </li>
          <li>
            Delta_3PD: [
            <b>
              0.1
            </b>
            %] = 
            <i>
              Weighted_Mean
            </i>
            ( Base_Delta_3PD [
            <b>
              -0.2
            </b>
            %], Base_Def_3PA [
            <b>
              698
            </b>
            ], Sample_Delta_3PD [
            <b>
              1.3
            </b>
            %], Sample_Def_3PA [
            <b>
              166
            </b>
            ])
          </li>
          <ul>
            <li>
              Base_Delta_3PD: [
              <b>
                -0.2
              </b>
              %] = (1 - Luck_Factor [
              <b>
                66.0
              </b>
              %]) * (Base_3P_Def [
              <b>
                32.5
              </b>
              %] - Base_3P_SoS [
              <b>
                33.0
              </b>
              %])
            </li>
            <li>
              Sample_Delta_3PD: [
              <b>
                1.3
              </b>
              %] = (1 - Luck_Factor [
              <b>
                66.0
              </b>
              %]) * (Sample_3P_Def [
              <b>
                36.1
              </b>
              %] - Sample_3P_SoS [
              <b>
                32.3
              </b>
              %])
            </li>
          </ul>
        </ul>
        <li>
          Adj_Delta_Pts/100: [
          <b>
            -3.3
          </b>
          ] = Delta_Pts/100 [
          <b>
            -3.4
          </b>
          ] * D1_Avg_Eff [
          <b>
            100.0
          </b>
          ] / Sample_Off_SOS [
          <b>
            105.5
          </b>
          ]
        </li>
        <li>
          Delta_Pts/100: [
          <b>
            -3.4
          </b>
          ] = Delta_Pts_No_ORBs/100 [
          <b>
            -3.8
          </b>
          ] + Pts_Off_Delta_Misses/100 [
          <b>
            0.4
          </b>
          ]
        </li>
        <ul>
          <li>
            <i>
              (Because of the change in 3P%, there are either more or less misses that can be rebounded by the offense.)
            </i>
          </li>
          <li>
            Delta_Pts_No_ORBs/100: [
            <b>
              -3.8
            </b>
            ] = 2 * Delta_eFG [
            <b>
              -2.2
            </b>
            %] * Sample_Def_FGA [
            <b>
              431
            </b>
            ] / Sample_Possessions [
            <b>
              489
            </b>
            ]
          </li>
          <li>
            Pts_Off_Delta_Misses/100: [
            <b>
              0.4
            </b>
            ] = ORB_Factor [
            <b>
              0.4
            </b>
            %] * (Sample_Def_Pts/100 [
            <b>
              98.2
            </b>
            ] + Delta_Pts_No_ORBs/100: [
            <b>
              -3.8
            </b>
            ])
          </li>
          <ul>
            <li>
              ORB_Factor: [
              <b>
                0.4
              </b>
              %] = Delta_Misses% [
              <b>
                1.4
              </b>
              %] * Sample_Def_ORB [
              <b>
                29.5
              </b>
              %] / (1 - Delta_Misses/100 [
              <b>
                1.4
              </b>
              %] * Sample_Def_ORB [
              <b>
                29.5
              </b>
              %])
            </li>
          </ul>
        </ul>
      </ul>
    </ul>
    <li>
      <i>
        (Regressing over baseline uses in a smaller and possibly biased dataset, which is bad; but can be useful if there is reason to believe the characteristics of the team are different compared to the sample - eg due to injury.)
      </i>
    </li>
  </ul>
</span>
`;

exports[`LuckAdjDiagView LuckAdjDiagView - should create snapshot (individual mode, baseline, override) 1`] = `
<span>
  <span>
    <b>
      Luck Adjustment diagnostics [
      Test2
      ]
    </b>
    <span>
       
      <a
        href="https://hoop-explorer.blogspot.com/2020/07/luck-adjustment-details.html"
        target="_blank"
      >
        (?)
      </a>
    </span>
     (
    <a
      href="#"
      onClick={[Function]}
    >
      show 
      less
    </a>
    )
  </span>
  <ul>
    <li>
      <b>
        Offense
      </b>
      :
    </li>
    <ul>
      <li>
        <b>
          3P Shooting
        </b>
        : 3P% [
        <b>
          -0.0
        </b>
        %], eFG [
        <b>
          -0.0
        </b>
        %]
         (
        <a
          href="#"
          onClick={[Function]}
        >
          show 
          less
        </a>
        )
      </li>
      <ul>
        <li>
          Delta_eFG: [
          <b>
            -0.0
          </b>
          %] = 1.5 * (Adj_3P_Off [
          <b>
            31.9
          </b>
          %] - Sample_3P_Off [
          <b>
            32.0
          </b>
          %]) * Sample_Off_3PR [
          <b>
            42.8
          </b>
          %]
        </li>
        <ul>
          <li>
            <i>
              (The idea is we'll calculate the expected shooting performance of the players in the lineup set, weighted by their usage, and then regress the actual 3P shooting agains that.)
            </i>
          </li>
          <li>
            Adj_3P_Off: [
            <b>
              31.9
            </b>
            %] = 
            <i>
              Weighted_Mean
            </i>
            ( Expected_3P% [
            <b>
              31.9
            </b>
            %], Base_3PA [
            <b>
              765
            </b>
            ], Sample_3P% [
            <b>
              32.0
            </b>
            %], Sample_3PA [
            <b>
              582
            </b>
            ] )
          </li>
          <li>
            Expected_3P%: [
            <b>
              31.9
            </b>
            %] = Calculated from 
            <i>
              Weighted_Mean
            </i>
             of: (early / assisted / solo / unknown)
          </li>
          <ul>
            <li
              key="0"
            >
              [
              <b>
                Cowan, Anthony
              </b>
              ]: Sample_3PA=[
              <b>
                144: 15 / 29 / 16 / 84
              </b>
              ] Base_3P%=[
              <b>
                32.2%: 32.2 / 34.2 / 28.2 / 32.2
              </b>
              ]
            </li>
            <li
              key="1"
            >
              [
              <b>
                Wiggins, Aaron
              </b>
              ]: Sample_3PA=[
              <b>
                133: 28 / 35 / 3 / 67
              </b>
              ] Base_3P%=[
              <b>
                31.7%: 31.7 / 32.1 / 26.1 / 31.7
              </b>
              ]
            </li>
          </ul>
        </ul>
      </ul>
    </ul>
    <li>
      <b>
        Defense
      </b>
      :
    </li>
    <ul>
      <li>
        <b>
          3P Shooting
        </b>
        : 3P% [
        <b>
          -3.8
        </b>
        %]
         (
        <a
          href="#"
          onClick={[Function]}
        >
          show 
          less
        </a>
        )
      </li>
      <ul>
        <li>
          Delta_3P%: [
          <b>
            -3.8
          </b>
          %] = Adj_3P_Def [
          <b>
            32.4
          </b>
          %] - Sample_3P_Def [
          <b>
            36.1
          </b>
          %]
        </li>
        <ul>
          <li>
            <i>
              (The idea is we calculate a "3P defense" number from the sample, regressed to the [
              <b>
                baseline
              </b>
              ], assuming that [
              <b>
                66.0
              </b>
              %] of it is just luck. Then we calculate a "luck adjusted" 3P% by combining "3P defense" and the weighted average opponent 3P%.)
            </i>
          </li>
          <li>
            Adj_3P_Def: [
            <b>
              32.4
            </b>
            %] = Sample_3P_SoS [
            <b>
              32.3
            </b>
            %] + Delta_3PD [
            <b>
              0.1
            </b>
            %]
          </li>
          <li>
            Delta_3PD: [
            <b>
              0.1
            </b>
            %] = 
            <i>
              Weighted_Mean
            </i>
            ( Base_Delta_3PD [
            <b>
              -0.2
            </b>
            %], Base_Def_3PA [
            <b>
              698
            </b>
            ], Sample_Delta_3PD [
            <b>
              1.3
            </b>
            %], Sample_Def_3PA [
            <b>
              166
            </b>
            ])
          </li>
          <ul>
            <li>
              Base_Delta_3PD: [
              <b>
                -0.2
              </b>
              %] = (1 - Luck_Factor [
              <b>
                66.0
              </b>
              %]) * (Base_3P_Def [
              <b>
                32.5
              </b>
              %] - Base_3P_SoS [
              <b>
                33.0
              </b>
              %])
            </li>
            <li>
              Sample_Delta_3PD: [
              <b>
                1.3
              </b>
              %] = (1 - Luck_Factor [
              <b>
                66.0
              </b>
              %]) * (Sample_3P_Def [
              <b>
                36.1
              </b>
              %] - Sample_3P_SoS [
              <b>
                32.3
              </b>
              %])
            </li>
          </ul>
        </ul>
      </ul>
    </ul>
    <li>
      <i>
        (Regressing over baseline uses in a smaller and possibly biased dataset, which is bad; but can be useful if there is reason to believe the characteristics of the team are different compared to the sample - eg due to injury.)
      </i>
    </li>
  </ul>
</span>
`;

exports[`LuckAdjDiagView LuckAdjDiagView - should create snapshot (season, !override) 1`] = `
<span>
  <span>
    <b>
      Luck Adjustment diagnostics [
      Test1
      ]
    </b>
    <span>
       off=[
      <b>
        -0.0
      </b>
      ], def=[
      <b>
        -3.3
      </b>
      ], margin=[
      <b>
        3.2
      </b>
      ] pts/100
    </span>
     (
    <a
      href="#"
      onClick={[Function]}
    >
      show 
      less
    </a>
    )
  </span>
  <ul>
    <li>
      <b>
        Offense
      </b>
      :
      <span>
         adjustment [
        <b>
          -0.0
        </b>
        ] pts/100
      </span>
    </li>
    <ul>
      <li>
        <b>
          3P Shooting
        </b>
        : 3P% [
        <b>
          -0.0
        </b>
        %], eFG [
        <b>
          -0.0
        </b>
        %]
        <span>
          , adjustment [
          <b>
            -0.0
          </b>
          ] pts/100
        </span>
         (
        <a
          href="#"
          onClick={[Function]}
        >
          show 
          more
        </a>
        )
      </li>
    </ul>
    <li>
      <b>
        Defense
      </b>
      :
      <span>
         adjustment [
        <b>
          -3.3
        </b>
        ] pts/100
      </span>
    </li>
    <ul>
      <li>
        <b>
          3P Shooting
        </b>
        : 3P% [
        <b>
          -3.8
        </b>
        %]
        <span>
          , eFG [
          <b>
            -2.2
          </b>
          %], adjustment [
          <b>
            -3.3
          </b>
          ] pts/100
        </span>
         (
        <a
          href="#"
          onClick={[Function]}
        >
          show 
          more
        </a>
        )
      </li>
    </ul>
  </ul>
</span>
`;

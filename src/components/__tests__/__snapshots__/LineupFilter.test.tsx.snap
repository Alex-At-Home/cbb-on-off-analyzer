// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LineupFilter LineupFilter - should create snapshot 1`] = `
<LoadingOverlay
  active={false}
  spinner={true}
  text="Calculating statistics"
>
  <Form
    inline={false}
  >
    <FormGroup
      as={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "noGutters": false,
          },
          "render": [Function],
        }
      }
    >
      <Col
        lg={2}
        md={3}
        sm={6}
        xs={6}
      >
        <StateManager
          defaultInputValue=""
          defaultMenuIsOpen={false}
          defaultValue={null}
          isSearchable={false}
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "Men",
                "value": "Men",
              },
            ]
          }
          value={
            Object {
              "label": "Men",
              "value": "Men",
            }
          }
        />
      </Col>
      <Col
        lg={2}
        md={3}
        sm={6}
        xs={6}
      >
        <StateManager
          defaultInputValue=""
          defaultMenuIsOpen={false}
          defaultValue={null}
          isSearchable={false}
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "2015/6",
                "value": "2015/6",
              },
              Object {
                "label": "2018/9",
                "value": "2018/9",
              },
              Object {
                "label": "2019/20",
                "value": "2019/20",
              },
            ]
          }
          value={
            Object {
              "label": "2019/20",
              "value": "2019/20",
            }
          }
        />
      </Col>
      <Col
        bsPrefix="d-lg-none d-md-none"
        className="w-100"
      />
      <Col
        lg={6}
        md={6}
        sm={12}
        xs={12}
      >
        <StateManager
          components={
            Object {
              "MenuList": [Function],
            }
          }
          defaultInputValue=""
          defaultMenuIsOpen={false}
          defaultValue={null}
          isClearable={true}
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "Maryland",
                "value": "Maryland",
              },
              Object {
                "label": "Indiana",
                "value": "Indiana",
              },
              Object {
                "label": "Nebraska",
                "value": "Nebraska",
              },
              Object {
                "label": "Wisconsin",
                "value": "Wisconsin",
              },
              Object {
                "label": "Ohio St.",
                "value": "Ohio St.",
              },
              Object {
                "label": "Michigan St.",
                "value": "Michigan St.",
              },
              Object {
                "label": "Iowa",
                "value": "Iowa",
              },
              Object {
                "label": "Michigan",
                "value": "Michigan",
              },
              Object {
                "label": "Purdue",
                "value": "Purdue",
              },
              Object {
                "label": "Illinois",
                "value": "Illinois",
              },
              Object {
                "label": "Penn St.",
                "value": "Penn St.",
              },
              Object {
                "label": "Northwestern",
                "value": "Northwestern",
              },
              Object {
                "label": "Rutgers",
                "value": "Rutgers",
              },
              Object {
                "label": "Minnesota",
                "value": "Minnesota",
              },
            ]
          }
          styles={
            Object {
              "menu": [Function],
            }
          }
          value={
            Object {
              "label": "Choose Team...",
            }
          }
        />
      </Col>
    </FormGroup>
    <FormGroup
      as={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "noGutters": false,
          },
          "render": [Function],
        }
      }
    >
      <FormLabel
        column={true}
        sm="2"
        srOnly={false}
      >
        Baseline Query
      </FormLabel>
      <Col
        sm="8"
      >
        <FormControl
          onChange={[Function]}
          onKeyUp={[Function]}
          placeholder="eg 'Player1 AND NOT (WalkOn1 OR WalkOn2)'"
          value=""
        />
      </Col>
      <Col
        sm="2"
      >
        <FormCheck
          checked={false}
          disabled={true}
          id="excludeWalkons"
          inline={false}
          isInvalid={false}
          isValid={false}
          label="Auto Walk-ons"
          title=""
          type="switch"
        />
      </Col>
    </FormGroup>
    <FormGroup
      as={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": Object {
            "noGutters": false,
          },
          "render": [Function],
        }
      }
      controlId="oppositionFilter"
    >
      <FormLabel
        column={true}
        sm="2"
        srOnly={false}
      >
        Opponent Strength
      </FormLabel>
      <Col
        sm="2"
      >
        <InputGroup>
          <InputGroupPrepend>
            <InputGroupText
              id="filterOppoBest"
            >
              Best
            </InputGroupText>
          </InputGroupPrepend>
          <FormControl
            onChange={[Function]}
            placeholder="eg 0"
            value="0"
          />
        </InputGroup>
      </Col>
      <Col
        sm="2"
      >
        <InputGroup>
          <InputGroupPrepend>
            <InputGroupText
              id="filterOppoWorst"
            >
              Worst
            </InputGroupText>
          </InputGroupPrepend>
          <FormControl
            onChange={[Function]}
            placeholder="eg 400"
            value="400"
          />
        </InputGroup>
      </Col>
      <FormLabel
        column={true}
        sm="2"
        srOnly={false}
      >
        (out of ~360 teams)
      </FormLabel>
    </FormGroup>
    <Button
      active={false}
      disabled={false}
      onClick={[Function]}
      type="button"
      variant="primary"
    >
      Submit
    </Button>
  </Form>
</LoadingOverlay>
`;
